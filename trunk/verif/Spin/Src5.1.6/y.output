Terminals which are not used

   MTYPE
   LABEL
   NON_ATOMIC


Grammar

    0 $accept: program $end

    1 program: units

    2 units: unit
    3      | units unit

    4 unit: proc
    5     | init
    6     | claim
    7     | events
    8     | one_decl
    9     | utype
   10     | c_fcts
   11     | ns
   12     | SEMI
   13     | error

   14 @1: /* empty */

   15 @2: /* empty */

   16 proc: inst proctype NAME @1 '(' decl ')' @2 Opt_priority Opt_enabler body

   17 proctype: PROCTYPE
   18         | D_PROCTYPE

   19 inst: /* empty */
   20     | ACTIVE
   21     | ACTIVE '[' CONST ']'
   22     | ACTIVE '[' NAME ']'

   23 @3: /* empty */

   24 init: INIT @3 Opt_priority body

   25 @4: /* empty */

   26 claim: CLAIM @4 body

   27 @5: /* empty */

   28 events: TRACE @5 body

   29 @6: /* empty */

   30 utype: TYPEDEF NAME @6 '{' decl_lst '}'

   31 nm: NAME
   32   | INAME

   33 @7: /* empty */

   34 ns: INLINE nm '(' @7 args ')'

   35 c_fcts: ccode
   36       | cstate

   37 cstate: C_STATE STRING STRING
   38       | C_TRACK STRING STRING
   39       | C_STATE STRING STRING STRING
   40       | C_TRACK STRING STRING STRING

   41 ccode: C_CODE
   42      | C_DECL

   43 cexpr: C_EXPR

   44 @8: /* empty */

   45 @9: /* empty */

   46 body: '{' @8 sequence OS @9 '}'

   47 sequence: step
   48         | sequence MS step

   49 step: one_decl
   50     | XU vref_lst
   51     | NAME ':' one_decl
   52     | NAME ':' XU
   53     | stmnt
   54     | stmnt UNLESS stmnt

   55 vis: /* empty */
   56    | HIDDEN
   57    | SHOW
   58    | ISLOCAL

   59 asgn: /* empty */
   60     | ASGN

   61 one_decl: vis TYPE var_list
   62         | vis UNAME var_list
   63         | vis TYPE asgn '{' nlst '}'

   64 decl_lst: one_decl
   65         | one_decl SEMI decl_lst

   66 decl: /* empty */
   67     | decl_lst

   68 vref_lst: varref
   69         | varref ',' vref_lst

   70 var_list: ivar
   71         | ivar ',' var_list

   72 ivar: vardcl
   73     | vardcl ASGN expr
   74     | vardcl ASGN ch_init

   75 ch_init: '[' CONST ']' OF '{' typ_list '}'

   76 vardcl: NAME
   77       | NAME ':' CONST
   78       | NAME '[' CONST ']'

   79 varref: cmpnd

   80 pfld: NAME

   81 @10: /* empty */

   82 pfld: NAME @10 '[' expr ']'

   83 @11: /* empty */

   84 cmpnd: pfld @11 sfld

   85 sfld: /* empty */
   86     | '.' cmpnd

   87 stmnt: Special
   88      | Stmnt

   89 @12: /* empty */

   90 Special: varref RCV @12 rargs

   91 @13: /* empty */

   92 Special: varref SND @13 margs
   93        | IF options FI

   94 @14: /* empty */

   95 Special: DO @14 options OD
   96        | BREAK
   97        | GOTO NAME
   98        | NAME ':' stmnt

   99 Stmnt: varref ASGN expr
  100      | varref INCR
  101      | varref DECR

  102 @15: /* empty */

  103 Stmnt: PRINT '(' STRING @15 prargs ')'
  104      | PRINTM '(' varref ')'
  105      | PRINTM '(' CONST ')'
  106      | ASSERT full_expr
  107      | ccode

  108 @16: /* empty */

  109 Stmnt: varref R_RCV @16 rargs

  110 @17: /* empty */

  111 Stmnt: varref RCV @17 LT rargs GT

  112 @18: /* empty */

  113 Stmnt: varref R_RCV @18 LT rargs GT

  114 @19: /* empty */

  115 Stmnt: varref O_SND @19 margs
  116      | full_expr
  117      | ELSE

  118 @20: /* empty */

  119 Stmnt: ATOMIC '{' @20 sequence OS '}'

  120 @21: /* empty */

  121 Stmnt: D_STEP '{' @21 sequence OS '}'

  122 @22: /* empty */

  123 Stmnt: '{' @22 sequence OS '}'

  124 @23: /* empty */

  125 @24: /* empty */

  126 Stmnt: INAME @23 '(' args ')' @24 Stmnt

  127 options: option
  128        | option options

  129 @25: /* empty */

  130 option: SEP @25 sequence OS

  131 OS: /* empty */
  132   | SEMI

  133 MS: SEMI
  134   | MS SEMI

  135 aname: NAME
  136      | PNAME

  137 expr: '(' expr ')'
  138     | expr '+' expr
  139     | expr '-' expr
  140     | expr '*' expr
  141     | expr '/' expr
  142     | expr '%' expr
  143     | expr '&' expr
  144     | expr '^' expr
  145     | expr '|' expr
  146     | expr GT expr
  147     | expr LT expr
  148     | expr GE expr
  149     | expr LE expr
  150     | expr EQ expr
  151     | expr NE expr
  152     | expr AND expr
  153     | expr OR expr
  154     | expr LSHIFT expr
  155     | expr RSHIFT expr
  156     | '~' expr
  157     | '-' expr
  158     | SND expr
  159     | '(' expr SEMI expr ':' expr ')'

  160 @26: /* empty */

  161 expr: RUN aname @26 '(' args ')' Opt_priority
  162     | LEN '(' varref ')'
  163     | ENABLED '(' expr ')'

  164 @27: /* empty */

  165 expr: varref RCV @27 '[' rargs ']'

  166 @28: /* empty */

  167 expr: varref R_RCV @28 '[' rargs ']'
  168     | varref
  169     | cexpr
  170     | CONST
  171     | TIMEOUT
  172     | NONPROGRESS
  173     | PC_VAL '(' expr ')'
  174     | PNAME '[' expr ']' '@' NAME
  175     | PNAME '[' expr ']' ':' pfld
  176     | PNAME '@' NAME
  177     | PNAME ':' pfld

  178 Opt_priority: /* empty */
  179             | PRIORITY CONST

  180 full_expr: expr
  181          | Expr

  182 Opt_enabler: /* empty */
  183            | PROVIDED '(' full_expr ')'
  184            | PROVIDED error

  185 Expr: Probe
  186     | '(' Expr ')'
  187     | Expr AND Expr
  188     | Expr AND expr
  189     | Expr OR Expr
  190     | Expr OR expr
  191     | expr AND Expr
  192     | expr OR Expr

  193 Probe: FULL '(' varref ')'
  194      | NFULL '(' varref ')'
  195      | EMPTY '(' varref ')'
  196      | NEMPTY '(' varref ')'

  197 basetype: TYPE
  198         | UNAME
  199         | error

  200 typ_list: basetype
  201         | basetype ',' typ_list

  202 args: /* empty */
  203     | arg

  204 prargs: /* empty */
  205       | ',' arg

  206 margs: arg
  207      | expr '(' arg ')'

  208 arg: expr
  209    | expr ',' arg

  210 rarg: varref
  211     | EVAL '(' expr ')'
  212     | CONST
  213     | '-' CONST

  214 rargs: rarg
  215      | rarg ',' rargs
  216      | rarg '(' rargs ')'
  217      | '(' rargs ')'

  218 nlst: NAME
  219     | nlst NAME
  220     | nlst ','


Terminals, with rules where they appear

$end (0) 0
'%' (37) 142
'&' (38) 143
'(' (40) 16 34 103 104 105 126 137 159 161 162 163 173 183 186 193
    194 195 196 207 211 216 217
')' (41) 16 34 103 104 105 126 137 159 161 162 163 173 183 186 193
    194 195 196 207 211 216 217
'*' (42) 140
'+' (43) 138
',' (44) 69 71 201 205 209 215 220
'-' (45) 139 157 213
'.' (46) 86
'/' (47) 141
':' (58) 51 52 77 98 159 175 177
'@' (64) 174 176
'[' (91) 21 22 75 78 82 165 167 174 175
']' (93) 21 22 75 78 82 165 167 174 175
'^' (94) 144
'{' (123) 30 46 63 75 119 121 123
'|' (124) 145
'}' (125) 30 46 63 75 119 121 123
'~' (126) 156
error (256) 13 184 199
ASSERT (258) 106
PRINT (259) 103
PRINTM (260) 104 105
C_CODE (261) 41
C_DECL (262) 42
C_EXPR (263) 43
C_STATE (264) 37 39
C_TRACK (265) 38 40
RUN (266) 161
LEN (267) 162
ENABLED (268) 163
EVAL (269) 211
PC_VAL (270) 173
TYPEDEF (271) 30
MTYPE (272)
INLINE (273) 34
LABEL (274)
OF (275) 75
GOTO (276) 97
BREAK (277) 96
ELSE (278) 117
SEMI (279) 12 65 132 133 134 159
IF (280) 93
FI (281) 93
DO (282) 95
OD (283) 95
SEP (284) 130
ATOMIC (285) 119
NON_ATOMIC (286)
D_STEP (287) 121
UNLESS (288) 54
TIMEOUT (289) 171
NONPROGRESS (290) 172
ACTIVE (291) 20 21 22
PROCTYPE (292) 17
D_PROCTYPE (293) 18
HIDDEN (294) 56
SHOW (295) 57
ISLOCAL (296) 58
PRIORITY (297) 179
PROVIDED (298) 183 184
FULL (299) 193
EMPTY (300) 195
NFULL (301) 194
NEMPTY (302) 196
CONST (303) 21 75 77 78 105 170 179 212 213
TYPE (304) 61 63 197
XU (305) 50 52
NAME (306) 16 22 30 31 51 52 76 77 78 80 82 97 98 135 174 176 218 219
UNAME (307) 62 198
PNAME (308) 136 174 175 176 177
INAME (309) 32 126
STRING (310) 37 38 39 40 103
CLAIM (311) 26
TRACE (312) 28
INIT (313) 24
ASGN (314) 60 73 74 99
R_RCV (315) 109 113 167
RCV (316) 90 111 165
O_SND (317) 115
SND (318) 92 158
OR (319) 153 189 190 192
AND (320) 152 187 188 191
NE (321) 151
EQ (322) 150
LE (323) 149
GE (324) 148
LT (325) 111 113 147
GT (326) 111 113 146
RSHIFT (327) 155
LSHIFT (328) 154
DECR (329) 101
INCR (330) 100
NEG (331)
UMIN (332)
DOT (333)


Nonterminals, with rules where they appear

$accept (98)
    on left: 0
program (99)
    on left: 1, on right: 0
units (100)
    on left: 2 3, on right: 1 3
unit (101)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 3
proc (102)
    on left: 16, on right: 4
@1 (103)
    on left: 14, on right: 16
@2 (104)
    on left: 15, on right: 16
proctype (105)
    on left: 17 18, on right: 16
inst (106)
    on left: 19 20 21 22, on right: 16
init (107)
    on left: 24, on right: 5
@3 (108)
    on left: 23, on right: 24
claim (109)
    on left: 26, on right: 6
@4 (110)
    on left: 25, on right: 26
events (111)
    on left: 28, on right: 7
@5 (112)
    on left: 27, on right: 28
utype (113)
    on left: 30, on right: 9
@6 (114)
    on left: 29, on right: 30
nm (115)
    on left: 31 32, on right: 34
ns (116)
    on left: 34, on right: 11
@7 (117)
    on left: 33, on right: 34
c_fcts (118)
    on left: 35 36, on right: 10
cstate (119)
    on left: 37 38 39 40, on right: 36
ccode (120)
    on left: 41 42, on right: 35 107
cexpr (121)
    on left: 43, on right: 169
body (122)
    on left: 46, on right: 16 24 26 28
@8 (123)
    on left: 44, on right: 46
@9 (124)
    on left: 45, on right: 46
sequence (125)
    on left: 47 48, on right: 46 48 119 121 123 130
step (126)
    on left: 49 50 51 52 53 54, on right: 47 48
vis (127)
    on left: 55 56 57 58, on right: 61 62 63
asgn (128)
    on left: 59 60, on right: 63
one_decl (129)
    on left: 61 62 63, on right: 8 49 51 64 65
decl_lst (130)
    on left: 64 65, on right: 30 65 67
decl (131)
    on left: 66 67, on right: 16
vref_lst (132)
    on left: 68 69, on right: 50 69
var_list (133)
    on left: 70 71, on right: 61 62 71
ivar (134)
    on left: 72 73 74, on right: 70 71
ch_init (135)
    on left: 75, on right: 74
vardcl (136)
    on left: 76 77 78, on right: 72 73 74
varref (137)
    on left: 79, on right: 68 69 90 92 99 100 101 104 109 111 113 115
    162 165 167 168 193 194 195 196 210
pfld (138)
    on left: 80 82, on right: 84 175 177
@10 (139)
    on left: 81, on right: 82
cmpnd (140)
    on left: 84, on right: 79 86
@11 (141)
    on left: 83, on right: 84
sfld (142)
    on left: 85 86, on right: 84
stmnt (143)
    on left: 87 88, on right: 53 54 98
Special (144)
    on left: 90 92 93 95 96 97 98, on right: 87
@12 (145)
    on left: 89, on right: 90
@13 (146)
    on left: 91, on right: 92
@14 (147)
    on left: 94, on right: 95
Stmnt (148)
    on left: 99 100 101 103 104 105 106 107 109 111 113 115 116 117
    119 121 123 126, on right: 88 126
@15 (149)
    on left: 102, on right: 103
@16 (150)
    on left: 108, on right: 109
@17 (151)
    on left: 110, on right: 111
@18 (152)
    on left: 112, on right: 113
@19 (153)
    on left: 114, on right: 115
@20 (154)
    on left: 118, on right: 119
@21 (155)
    on left: 120, on right: 121
@22 (156)
    on left: 122, on right: 123
@23 (157)
    on left: 124, on right: 126
@24 (158)
    on left: 125, on right: 126
options (159)
    on left: 127 128, on right: 93 95 128
option (160)
    on left: 130, on right: 127 128
@25 (161)
    on left: 129, on right: 130
OS (162)
    on left: 131 132, on right: 46 119 121 123 130
MS (163)
    on left: 133 134, on right: 48 134
aname (164)
    on left: 135 136, on right: 161
expr (165)
    on left: 137 138 139 140 141 142 143 144 145 146 147 148 149 150
    151 152 153 154 155 156 157 158 159 161 162 163 165 167 168 169
    170 171 172 173 174 175 176 177, on right: 73 82 99 137 138 139
    140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155
    156 157 158 159 163 173 174 175 180 188 190 191 192 207 208 209
    211
@26 (166)
    on left: 160, on right: 161
@27 (167)
    on left: 164, on right: 165
@28 (168)
    on left: 166, on right: 167
Opt_priority (169)
    on left: 178 179, on right: 16 24 161
full_expr (170)
    on left: 180 181, on right: 106 116 183
Opt_enabler (171)
    on left: 182 183 184, on right: 16
Expr (172)
    on left: 185 186 187 188 189 190 191 192, on right: 181 186 187
    188 189 190 191 192
Probe (173)
    on left: 193 194 195 196, on right: 185
basetype (174)
    on left: 197 198 199, on right: 200 201
typ_list (175)
    on left: 200 201, on right: 75 201
args (176)
    on left: 202 203, on right: 34 126 161
prargs (177)
    on left: 204 205, on right: 103
margs (178)
    on left: 206 207, on right: 92 115
arg (179)
    on left: 208 209, on right: 203 205 206 207 209
rarg (180)
    on left: 210 211 212 213, on right: 214 215 216
rargs (181)
    on left: 214 215 216 217, on right: 90 109 111 113 165 167 215
    216 217
nlst (182)
    on left: 218 219 220, on right: 63 219 220


state 0

    0 $accept: . program $end

    error    shift, and go to state 1
    C_CODE   shift, and go to state 2
    C_DECL   shift, and go to state 3
    C_STATE  shift, and go to state 4
    C_TRACK  shift, and go to state 5
    TYPEDEF  shift, and go to state 6
    INLINE   shift, and go to state 7
    SEMI     shift, and go to state 8
    ACTIVE   shift, and go to state 9
    HIDDEN   shift, and go to state 10
    SHOW     shift, and go to state 11
    ISLOCAL  shift, and go to state 12
    CLAIM    shift, and go to state 13
    TRACE    shift, and go to state 14
    INIT     shift, and go to state 15

    PROCTYPE    reduce using rule 19 (inst)
    D_PROCTYPE  reduce using rule 19 (inst)
    TYPE        reduce using rule 55 (vis)
    UNAME       reduce using rule 55 (vis)

    program   go to state 16
    units     go to state 17
    unit      go to state 18
    proc      go to state 19
    inst      go to state 20
    init      go to state 21
    claim     go to state 22
    events    go to state 23
    utype     go to state 24
    ns        go to state 25
    c_fcts    go to state 26
    cstate    go to state 27
    ccode     go to state 28
    vis       go to state 29
    one_decl  go to state 30


state 1

   13 unit: error .

    $default  reduce using rule 13 (unit)


state 2

   41 ccode: C_CODE .

    $default  reduce using rule 41 (ccode)


state 3

   42 ccode: C_DECL .

    $default  reduce using rule 42 (ccode)


state 4

   37 cstate: C_STATE . STRING STRING
   39       | C_STATE . STRING STRING STRING

    STRING  shift, and go to state 31


state 5

   38 cstate: C_TRACK . STRING STRING
   40       | C_TRACK . STRING STRING STRING

    STRING  shift, and go to state 32


state 6

   30 utype: TYPEDEF . NAME @6 '{' decl_lst '}'

    NAME  shift, and go to state 33


state 7

   34 ns: INLINE . nm '(' @7 args ')'

    NAME   shift, and go to state 34
    INAME  shift, and go to state 35

    nm  go to state 36


state 8

   12 unit: SEMI .

    $default  reduce using rule 12 (unit)


state 9

   20 inst: ACTIVE .
   21     | ACTIVE . '[' CONST ']'
   22     | ACTIVE . '[' NAME ']'

    '['  shift, and go to state 37

    $default  reduce using rule 20 (inst)


state 10

   56 vis: HIDDEN .

    $default  reduce using rule 56 (vis)


state 11

   57 vis: SHOW .

    $default  reduce using rule 57 (vis)


state 12

   58 vis: ISLOCAL .

    $default  reduce using rule 58 (vis)


state 13

   26 claim: CLAIM . @4 body

    $default  reduce using rule 25 (@4)

    @4  go to state 38


state 14

   28 events: TRACE . @5 body

    $default  reduce using rule 27 (@5)

    @5  go to state 39


state 15

   24 init: INIT . @3 Opt_priority body

    $default  reduce using rule 23 (@3)

    @3  go to state 40


state 16

    0 $accept: program . $end

    $end  shift, and go to state 41


state 17

    1 program: units .
    3 units: units . unit

    error    shift, and go to state 1
    C_CODE   shift, and go to state 2
    C_DECL   shift, and go to state 3
    C_STATE  shift, and go to state 4
    C_TRACK  shift, and go to state 5
    TYPEDEF  shift, and go to state 6
    INLINE   shift, and go to state 7
    SEMI     shift, and go to state 8
    ACTIVE   shift, and go to state 9
    HIDDEN   shift, and go to state 10
    SHOW     shift, and go to state 11
    ISLOCAL  shift, and go to state 12
    CLAIM    shift, and go to state 13
    TRACE    shift, and go to state 14
    INIT     shift, and go to state 15

    $end        reduce using rule 1 (program)
    PROCTYPE    reduce using rule 19 (inst)
    D_PROCTYPE  reduce using rule 19 (inst)
    TYPE        reduce using rule 55 (vis)
    UNAME       reduce using rule 55 (vis)

    unit      go to state 42
    proc      go to state 19
    inst      go to state 20
    init      go to state 21
    claim     go to state 22
    events    go to state 23
    utype     go to state 24
    ns        go to state 25
    c_fcts    go to state 26
    cstate    go to state 27
    ccode     go to state 28
    vis       go to state 29
    one_decl  go to state 30


state 18

    2 units: unit .

    $default  reduce using rule 2 (units)


state 19

    4 unit: proc .

    $default  reduce using rule 4 (unit)


state 20

   16 proc: inst . proctype NAME @1 '(' decl ')' @2 Opt_priority Opt_enabler body

    PROCTYPE    shift, and go to state 43
    D_PROCTYPE  shift, and go to state 44

    proctype  go to state 45


state 21

    5 unit: init .

    $default  reduce using rule 5 (unit)


state 22

    6 unit: claim .

    $default  reduce using rule 6 (unit)


state 23

    7 unit: events .

    $default  reduce using rule 7 (unit)


state 24

    9 unit: utype .

    $default  reduce using rule 9 (unit)


state 25

   11 unit: ns .

    $default  reduce using rule 11 (unit)


state 26

   10 unit: c_fcts .

    $default  reduce using rule 10 (unit)


state 27

   36 c_fcts: cstate .

    $default  reduce using rule 36 (c_fcts)


state 28

   35 c_fcts: ccode .

    $default  reduce using rule 35 (c_fcts)


state 29

   61 one_decl: vis . TYPE var_list
   62         | vis . UNAME var_list
   63         | vis . TYPE asgn '{' nlst '}'

    TYPE   shift, and go to state 46
    UNAME  shift, and go to state 47


state 30

    8 unit: one_decl .

    $default  reduce using rule 8 (unit)


state 31

   37 cstate: C_STATE STRING . STRING
   39       | C_STATE STRING . STRING STRING

    STRING  shift, and go to state 48


state 32

   38 cstate: C_TRACK STRING . STRING
   40       | C_TRACK STRING . STRING STRING

    STRING  shift, and go to state 49


state 33

   30 utype: TYPEDEF NAME . @6 '{' decl_lst '}'

    $default  reduce using rule 29 (@6)

    @6  go to state 50


state 34

   31 nm: NAME .

    $default  reduce using rule 31 (nm)


state 35

   32 nm: INAME .

    $default  reduce using rule 32 (nm)


state 36

   34 ns: INLINE nm . '(' @7 args ')'

    '('  shift, and go to state 51


state 37

   21 inst: ACTIVE '[' . CONST ']'
   22     | ACTIVE '[' . NAME ']'

    CONST  shift, and go to state 52
    NAME   shift, and go to state 53


state 38

   26 claim: CLAIM @4 . body

    '{'  shift, and go to state 54

    body  go to state 55


state 39

   28 events: TRACE @5 . body

    '{'  shift, and go to state 54

    body  go to state 56


state 40

   24 init: INIT @3 . Opt_priority body

    PRIORITY  shift, and go to state 57

    $default  reduce using rule 178 (Opt_priority)

    Opt_priority  go to state 58


state 41

    0 $accept: program $end .

    $default  accept


state 42

    3 units: units unit .

    $default  reduce using rule 3 (units)


state 43

   17 proctype: PROCTYPE .

    $default  reduce using rule 17 (proctype)


state 44

   18 proctype: D_PROCTYPE .

    $default  reduce using rule 18 (proctype)


state 45

   16 proc: inst proctype . NAME @1 '(' decl ')' @2 Opt_priority Opt_enabler body

    NAME  shift, and go to state 59


state 46

   61 one_decl: vis TYPE . var_list
   63         | vis TYPE . asgn '{' nlst '}'

    NAME  shift, and go to state 60
    ASGN  shift, and go to state 61

    $default  reduce using rule 59 (asgn)

    asgn      go to state 62
    var_list  go to state 63
    ivar      go to state 64
    vardcl    go to state 65


state 47

   62 one_decl: vis UNAME . var_list

    NAME  shift, and go to state 60

    var_list  go to state 66
    ivar      go to state 64
    vardcl    go to state 65


state 48

   37 cstate: C_STATE STRING STRING .
   39       | C_STATE STRING STRING . STRING

    STRING  shift, and go to state 67

    $default  reduce using rule 37 (cstate)


state 49

   38 cstate: C_TRACK STRING STRING .
   40       | C_TRACK STRING STRING . STRING

    STRING  shift, and go to state 68

    $default  reduce using rule 38 (cstate)


state 50

   30 utype: TYPEDEF NAME @6 . '{' decl_lst '}'

    '{'  shift, and go to state 69


state 51

   34 ns: INLINE nm '(' . @7 args ')'

    $default  reduce using rule 33 (@7)

    @7  go to state 70


state 52

   21 inst: ACTIVE '[' CONST . ']'

    ']'  shift, and go to state 71


state 53

   22 inst: ACTIVE '[' NAME . ']'

    ']'  shift, and go to state 72


state 54

   46 body: '{' . @8 sequence OS @9 '}'

    $default  reduce using rule 44 (@8)

    @8  go to state 73


state 55

   26 claim: CLAIM @4 body .

    $default  reduce using rule 26 (claim)


state 56

   28 events: TRACE @5 body .

    $default  reduce using rule 28 (events)


state 57

  179 Opt_priority: PRIORITY . CONST

    CONST  shift, and go to state 74


state 58

   24 init: INIT @3 Opt_priority . body

    '{'  shift, and go to state 54

    body  go to state 75


state 59

   16 proc: inst proctype NAME . @1 '(' decl ')' @2 Opt_priority Opt_enabler body

    $default  reduce using rule 14 (@1)

    @1  go to state 76


state 60

   76 vardcl: NAME .
   77       | NAME . ':' CONST
   78       | NAME . '[' CONST ']'

    '['  shift, and go to state 77
    ':'  shift, and go to state 78

    $default  reduce using rule 76 (vardcl)


state 61

   60 asgn: ASGN .

    $default  reduce using rule 60 (asgn)


state 62

   63 one_decl: vis TYPE asgn . '{' nlst '}'

    '{'  shift, and go to state 79


state 63

   61 one_decl: vis TYPE var_list .

    $default  reduce using rule 61 (one_decl)


state 64

   70 var_list: ivar .
   71         | ivar . ',' var_list

    ','  shift, and go to state 80

    $default  reduce using rule 70 (var_list)


state 65

   72 ivar: vardcl .
   73     | vardcl . ASGN expr
   74     | vardcl . ASGN ch_init

    ASGN  shift, and go to state 81

    $default  reduce using rule 72 (ivar)


state 66

   62 one_decl: vis UNAME var_list .

    $default  reduce using rule 62 (one_decl)


state 67

   39 cstate: C_STATE STRING STRING STRING .

    $default  reduce using rule 39 (cstate)


state 68

   40 cstate: C_TRACK STRING STRING STRING .

    $default  reduce using rule 40 (cstate)


state 69

   30 utype: TYPEDEF NAME @6 '{' . decl_lst '}'

    HIDDEN   shift, and go to state 10
    SHOW     shift, and go to state 11
    ISLOCAL  shift, and go to state 12

    $default  reduce using rule 55 (vis)

    vis       go to state 29
    one_decl  go to state 82
    decl_lst  go to state 83


state 70

   34 ns: INLINE nm '(' @7 . args ')'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    $default  reduce using rule 202 (args)

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 102
    args    go to state 103
    arg     go to state 104


state 71

   21 inst: ACTIVE '[' CONST ']' .

    $default  reduce using rule 21 (inst)


state 72

   22 inst: ACTIVE '[' NAME ']' .

    $default  reduce using rule 22 (inst)


state 73

   46 body: '{' @8 . sequence OS @9 '}'

    ASSERT       shift, and go to state 105
    PRINT        shift, and go to state 106
    PRINTM       shift, and go to state 107
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    GOTO         shift, and go to state 108
    BREAK        shift, and go to state 109
    ELSE         shift, and go to state 110
    IF           shift, and go to state 111
    DO           shift, and go to state 112
    ATOMIC       shift, and go to state 113
    D_STEP       shift, and go to state 114
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    HIDDEN       shift, and go to state 10
    SHOW         shift, and go to state 11
    ISLOCAL      shift, and go to state 12
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    XU           shift, and go to state 119
    NAME         shift, and go to state 120
    PNAME        shift, and go to state 93
    INAME        shift, and go to state 121
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122
    '{'          shift, and go to state 123

    $default  reduce using rule 55 (vis)

    ccode      go to state 124
    cexpr      go to state 98
    sequence   go to state 125
    step       go to state 126
    vis        go to state 29
    one_decl   go to state 127
    varref     go to state 128
    pfld       go to state 100
    cmpnd      go to state 101
    stmnt      go to state 129
    Special    go to state 130
    Stmnt      go to state 131
    expr       go to state 132
    full_expr  go to state 133
    Expr       go to state 134
    Probe      go to state 135


state 74

  179 Opt_priority: PRIORITY CONST .

    $default  reduce using rule 179 (Opt_priority)


state 75

   24 init: INIT @3 Opt_priority body .

    $default  reduce using rule 24 (init)


state 76

   16 proc: inst proctype NAME @1 . '(' decl ')' @2 Opt_priority Opt_enabler body

    '('  shift, and go to state 136


state 77

   78 vardcl: NAME '[' . CONST ']'

    CONST  shift, and go to state 137


state 78

   77 vardcl: NAME ':' . CONST

    CONST  shift, and go to state 138


state 79

   63 one_decl: vis TYPE asgn '{' . nlst '}'

    NAME  shift, and go to state 139

    nlst  go to state 140


state 80

   71 var_list: ivar ',' . var_list

    NAME  shift, and go to state 60

    var_list  go to state 141
    ivar      go to state 64
    vardcl    go to state 65


state 81

   73 ivar: vardcl ASGN . expr
   74     | vardcl ASGN . ch_init

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97
    '['          shift, and go to state 142

    cexpr    go to state 98
    ch_init  go to state 143
    varref   go to state 99
    pfld     go to state 100
    cmpnd    go to state 101
    expr     go to state 144


state 82

   64 decl_lst: one_decl .
   65         | one_decl . SEMI decl_lst

    SEMI  shift, and go to state 145

    $default  reduce using rule 64 (decl_lst)


state 83

   30 utype: TYPEDEF NAME @6 '{' decl_lst . '}'

    '}'  shift, and go to state 146


state 84

   43 cexpr: C_EXPR .

    $default  reduce using rule 43 (cexpr)


state 85

  161 expr: RUN . aname @26 '(' args ')' Opt_priority

    NAME   shift, and go to state 147
    PNAME  shift, and go to state 148

    aname  go to state 149


state 86

  162 expr: LEN . '(' varref ')'

    '('  shift, and go to state 150


state 87

  163 expr: ENABLED . '(' expr ')'

    '('  shift, and go to state 151


state 88

  173 expr: PC_VAL . '(' expr ')'

    '('  shift, and go to state 152


state 89

  171 expr: TIMEOUT .

    $default  reduce using rule 171 (expr)


state 90

  172 expr: NONPROGRESS .

    $default  reduce using rule 172 (expr)


state 91

  170 expr: CONST .

    $default  reduce using rule 170 (expr)


state 92

   80 pfld: NAME .
   82     | NAME . @10 '[' expr ']'

    '['       reduce using rule 81 (@10)
    $default  reduce using rule 80 (pfld)

    @10  go to state 153


state 93

  174 expr: PNAME . '[' expr ']' '@' NAME
  175     | PNAME . '[' expr ']' ':' pfld
  176     | PNAME . '@' NAME
  177     | PNAME . ':' pfld

    '['  shift, and go to state 154
    ':'  shift, and go to state 155
    '@'  shift, and go to state 156


state 94

  158 expr: SND . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 157


state 95

  157 expr: '-' . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 158


state 96

  156 expr: '~' . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 159


state 97

  137 expr: '(' . expr ')'
  159     | '(' . expr SEMI expr ':' expr ')'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 160


state 98

  169 expr: cexpr .

    $default  reduce using rule 169 (expr)


state 99

  165 expr: varref . RCV @27 '[' rargs ']'
  167     | varref . R_RCV @28 '[' rargs ']'
  168     | varref .

    R_RCV  shift, and go to state 161
    RCV    shift, and go to state 162

    $default  reduce using rule 168 (expr)


state 100

   84 cmpnd: pfld . @11 sfld

    $default  reduce using rule 83 (@11)

    @11  go to state 163


state 101

   79 varref: cmpnd .

    $default  reduce using rule 79 (varref)


state 102

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  208 arg: expr .
  209    | expr . ',' arg

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    ','     shift, and go to state 182

    $default  reduce using rule 208 (arg)


state 103

   34 ns: INLINE nm '(' @7 args . ')'

    ')'  shift, and go to state 183


state 104

  203 args: arg .

    $default  reduce using rule 203 (args)


state 105

  106 Stmnt: ASSERT . full_expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122

    cexpr      go to state 98
    varref     go to state 99
    pfld       go to state 100
    cmpnd      go to state 101
    expr       go to state 132
    full_expr  go to state 184
    Expr       go to state 134
    Probe      go to state 135


state 106

  103 Stmnt: PRINT . '(' STRING @15 prargs ')'

    '('  shift, and go to state 185


state 107

  104 Stmnt: PRINTM . '(' varref ')'
  105      | PRINTM . '(' CONST ')'

    '('  shift, and go to state 186


state 108

   97 Special: GOTO . NAME

    NAME  shift, and go to state 187


state 109

   96 Special: BREAK .

    $default  reduce using rule 96 (Special)


state 110

  117 Stmnt: ELSE .

    $default  reduce using rule 117 (Stmnt)


state 111

   93 Special: IF . options FI

    SEP  shift, and go to state 188

    options  go to state 189
    option   go to state 190


state 112

   95 Special: DO . @14 options OD

    $default  reduce using rule 94 (@14)

    @14  go to state 191


state 113

  119 Stmnt: ATOMIC . '{' @20 sequence OS '}'

    '{'  shift, and go to state 192


state 114

  121 Stmnt: D_STEP . '{' @21 sequence OS '}'

    '{'  shift, and go to state 193


state 115

  193 Probe: FULL . '(' varref ')'

    '('  shift, and go to state 194


state 116

  195 Probe: EMPTY . '(' varref ')'

    '('  shift, and go to state 195


state 117

  194 Probe: NFULL . '(' varref ')'

    '('  shift, and go to state 196


state 118

  196 Probe: NEMPTY . '(' varref ')'

    '('  shift, and go to state 197


state 119

   50 step: XU . vref_lst

    NAME  shift, and go to state 92

    vref_lst  go to state 198
    varref    go to state 199
    pfld      go to state 100
    cmpnd     go to state 101


state 120

   51 step: NAME . ':' one_decl
   52     | NAME . ':' XU
   80 pfld: NAME .
   82     | NAME . @10 '[' expr ']'
   98 Special: NAME . ':' stmnt

    ':'  shift, and go to state 200

    '['       reduce using rule 81 (@10)
    $default  reduce using rule 80 (pfld)

    @10  go to state 153


state 121

  126 Stmnt: INAME . @23 '(' args ')' @24 Stmnt

    $default  reduce using rule 124 (@23)

    @23  go to state 201


state 122

  137 expr: '(' . expr ')'
  159     | '(' . expr SEMI expr ':' expr ')'
  186 Expr: '(' . Expr ')'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 202
    Expr    go to state 203
    Probe   go to state 135


state 123

  123 Stmnt: '{' . @22 sequence OS '}'

    $default  reduce using rule 122 (@22)

    @22  go to state 204


state 124

  107 Stmnt: ccode .

    $default  reduce using rule 107 (Stmnt)


state 125

   46 body: '{' @8 sequence . OS @9 '}'
   48 sequence: sequence . MS step

    SEMI  shift, and go to state 205

    $default  reduce using rule 131 (OS)

    OS  go to state 206
    MS  go to state 207


state 126

   47 sequence: step .

    $default  reduce using rule 47 (sequence)


state 127

   49 step: one_decl .

    $default  reduce using rule 49 (step)


state 128

   90 Special: varref . RCV @12 rargs
   92        | varref . SND @13 margs
   99 Stmnt: varref . ASGN expr
  100      | varref . INCR
  101      | varref . DECR
  109      | varref . R_RCV @16 rargs
  111      | varref . RCV @17 LT rargs GT
  113      | varref . R_RCV @18 LT rargs GT
  115      | varref . O_SND @19 margs
  165 expr: varref . RCV @27 '[' rargs ']'
  167     | varref . R_RCV @28 '[' rargs ']'
  168     | varref .

    ASGN   shift, and go to state 208
    R_RCV  shift, and go to state 209
    RCV    shift, and go to state 210
    O_SND  shift, and go to state 211
    SND    shift, and go to state 212
    DECR   shift, and go to state 213
    INCR   shift, and go to state 214

    $default  reduce using rule 168 (expr)


state 129

   53 step: stmnt .
   54     | stmnt . UNLESS stmnt

    UNLESS  shift, and go to state 215

    $default  reduce using rule 53 (step)


state 130

   87 stmnt: Special .

    $default  reduce using rule 87 (stmnt)


state 131

   88 stmnt: Stmnt .

    $default  reduce using rule 88 (stmnt)


state 132

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  180 full_expr: expr .
  191 Expr: expr . AND Expr
  192     | expr . OR Expr

    OR      shift, and go to state 216
    AND     shift, and go to state 217
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 180 (full_expr)


state 133

  116 Stmnt: full_expr .

    $default  reduce using rule 116 (Stmnt)


state 134

  181 full_expr: Expr .
  187 Expr: Expr . AND Expr
  188     | Expr . AND expr
  189     | Expr . OR Expr
  190     | Expr . OR expr

    OR   shift, and go to state 218
    AND  shift, and go to state 219

    $default  reduce using rule 181 (full_expr)


state 135

  185 Expr: Probe .

    $default  reduce using rule 185 (Expr)


state 136

   16 proc: inst proctype NAME @1 '(' . decl ')' @2 Opt_priority Opt_enabler body

    HIDDEN   shift, and go to state 10
    SHOW     shift, and go to state 11
    ISLOCAL  shift, and go to state 12

    ')'       reduce using rule 66 (decl)
    $default  reduce using rule 55 (vis)

    vis       go to state 29
    one_decl  go to state 82
    decl_lst  go to state 220
    decl      go to state 221


state 137

   78 vardcl: NAME '[' CONST . ']'

    ']'  shift, and go to state 222


state 138

   77 vardcl: NAME ':' CONST .

    $default  reduce using rule 77 (vardcl)


state 139

  218 nlst: NAME .

    $default  reduce using rule 218 (nlst)


state 140

   63 one_decl: vis TYPE asgn '{' nlst . '}'
  219 nlst: nlst . NAME
  220     | nlst . ','

    NAME  shift, and go to state 223
    '}'   shift, and go to state 224
    ','   shift, and go to state 225


state 141

   71 var_list: ivar ',' var_list .

    $default  reduce using rule 71 (var_list)


state 142

   75 ch_init: '[' . CONST ']' OF '{' typ_list '}'

    CONST  shift, and go to state 226


state 143

   74 ivar: vardcl ASGN ch_init .

    $default  reduce using rule 74 (ivar)


state 144

   73 ivar: vardcl ASGN expr .
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 73 (ivar)


state 145

   65 decl_lst: one_decl SEMI . decl_lst

    HIDDEN   shift, and go to state 10
    SHOW     shift, and go to state 11
    ISLOCAL  shift, and go to state 12

    $default  reduce using rule 55 (vis)

    vis       go to state 29
    one_decl  go to state 82
    decl_lst  go to state 227


state 146

   30 utype: TYPEDEF NAME @6 '{' decl_lst '}' .

    $default  reduce using rule 30 (utype)


state 147

  135 aname: NAME .

    $default  reduce using rule 135 (aname)


state 148

  136 aname: PNAME .

    $default  reduce using rule 136 (aname)


state 149

  161 expr: RUN aname . @26 '(' args ')' Opt_priority

    $default  reduce using rule 160 (@26)

    @26  go to state 228


state 150

  162 expr: LEN '(' . varref ')'

    NAME  shift, and go to state 92

    varref  go to state 229
    pfld    go to state 100
    cmpnd   go to state 101


state 151

  163 expr: ENABLED '(' . expr ')'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 230


state 152

  173 expr: PC_VAL '(' . expr ')'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 231


state 153

   82 pfld: NAME @10 . '[' expr ']'

    '['  shift, and go to state 232


state 154

  174 expr: PNAME '[' . expr ']' '@' NAME
  175     | PNAME '[' . expr ']' ':' pfld

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 233


state 155

  177 expr: PNAME ':' . pfld

    NAME  shift, and go to state 92

    pfld  go to state 234


state 156

  176 expr: PNAME '@' . NAME

    NAME  shift, and go to state 235


state 157

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  158     | SND expr .

    $default  reduce using rule 158 (expr)


state 158

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  157     | '-' expr .

    $default  reduce using rule 157 (expr)


state 159

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  156     | '~' expr .

    $default  reduce using rule 156 (expr)


state 160

  137 expr: '(' expr . ')'
  138     | expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  159     | '(' expr . SEMI expr ':' expr ')'

    SEMI    shift, and go to state 236
    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    ')'     shift, and go to state 237


state 161

  167 expr: varref R_RCV . @28 '[' rargs ']'

    $default  reduce using rule 166 (@28)

    @28  go to state 238


state 162

  165 expr: varref RCV . @27 '[' rargs ']'

    $default  reduce using rule 164 (@27)

    @27  go to state 239


state 163

   84 cmpnd: pfld @11 . sfld

    '.'  shift, and go to state 240

    $default  reduce using rule 85 (sfld)

    sfld  go to state 241


state 164

  153 expr: expr OR . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 242


state 165

  152 expr: expr AND . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 243


state 166

  145 expr: expr '|' . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 244


state 167

  144 expr: expr '^' . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 245


state 168

  143 expr: expr '&' . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 246


state 169

  151 expr: expr NE . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 247


state 170

  150 expr: expr EQ . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 248


state 171

  149 expr: expr LE . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 249


state 172

  148 expr: expr GE . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 250


state 173

  147 expr: expr LT . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 251


state 174

  146 expr: expr GT . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 252


state 175

  155 expr: expr RSHIFT . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 253


state 176

  154 expr: expr LSHIFT . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 254


state 177

  138 expr: expr '+' . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 255


state 178

  139 expr: expr '-' . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 256


state 179

  140 expr: expr '*' . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 257


state 180

  141 expr: expr '/' . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 258


state 181

  142 expr: expr '%' . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 259


state 182

  209 arg: expr ',' . arg

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 102
    arg     go to state 260


state 183

   34 ns: INLINE nm '(' @7 args ')' .

    $default  reduce using rule 34 (ns)


state 184

  106 Stmnt: ASSERT full_expr .

    $default  reduce using rule 106 (Stmnt)


state 185

  103 Stmnt: PRINT '(' . STRING @15 prargs ')'

    STRING  shift, and go to state 261


state 186

  104 Stmnt: PRINTM '(' . varref ')'
  105      | PRINTM '(' . CONST ')'

    CONST  shift, and go to state 262
    NAME   shift, and go to state 92

    varref  go to state 263
    pfld    go to state 100
    cmpnd   go to state 101


state 187

   97 Special: GOTO NAME .

    $default  reduce using rule 97 (Special)


state 188

  130 option: SEP . @25 sequence OS

    $default  reduce using rule 129 (@25)

    @25  go to state 264


state 189

   93 Special: IF options . FI

    FI  shift, and go to state 265


state 190

  127 options: option .
  128        | option . options

    SEP  shift, and go to state 188

    $default  reduce using rule 127 (options)

    options  go to state 266
    option   go to state 190


state 191

   95 Special: DO @14 . options OD

    SEP  shift, and go to state 188

    options  go to state 267
    option   go to state 190


state 192

  119 Stmnt: ATOMIC '{' . @20 sequence OS '}'

    $default  reduce using rule 118 (@20)

    @20  go to state 268


state 193

  121 Stmnt: D_STEP '{' . @21 sequence OS '}'

    $default  reduce using rule 120 (@21)

    @21  go to state 269


state 194

  193 Probe: FULL '(' . varref ')'

    NAME  shift, and go to state 92

    varref  go to state 270
    pfld    go to state 100
    cmpnd   go to state 101


state 195

  195 Probe: EMPTY '(' . varref ')'

    NAME  shift, and go to state 92

    varref  go to state 271
    pfld    go to state 100
    cmpnd   go to state 101


state 196

  194 Probe: NFULL '(' . varref ')'

    NAME  shift, and go to state 92

    varref  go to state 272
    pfld    go to state 100
    cmpnd   go to state 101


state 197

  196 Probe: NEMPTY '(' . varref ')'

    NAME  shift, and go to state 92

    varref  go to state 273
    pfld    go to state 100
    cmpnd   go to state 101


state 198

   50 step: XU vref_lst .

    $default  reduce using rule 50 (step)


state 199

   68 vref_lst: varref .
   69         | varref . ',' vref_lst

    ','  shift, and go to state 274

    $default  reduce using rule 68 (vref_lst)


state 200

   51 step: NAME ':' . one_decl
   52     | NAME ':' . XU
   98 Special: NAME ':' . stmnt

    ASSERT       shift, and go to state 105
    PRINT        shift, and go to state 106
    PRINTM       shift, and go to state 107
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    GOTO         shift, and go to state 108
    BREAK        shift, and go to state 109
    ELSE         shift, and go to state 110
    IF           shift, and go to state 111
    DO           shift, and go to state 112
    ATOMIC       shift, and go to state 113
    D_STEP       shift, and go to state 114
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    HIDDEN       shift, and go to state 10
    SHOW         shift, and go to state 11
    ISLOCAL      shift, and go to state 12
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    XU           shift, and go to state 275
    NAME         shift, and go to state 276
    PNAME        shift, and go to state 93
    INAME        shift, and go to state 121
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122
    '{'          shift, and go to state 123

    $default  reduce using rule 55 (vis)

    ccode      go to state 124
    cexpr      go to state 98
    vis        go to state 29
    one_decl   go to state 277
    varref     go to state 128
    pfld       go to state 100
    cmpnd      go to state 101
    stmnt      go to state 278
    Special    go to state 130
    Stmnt      go to state 131
    expr       go to state 132
    full_expr  go to state 133
    Expr       go to state 134
    Probe      go to state 135


state 201

  126 Stmnt: INAME @23 . '(' args ')' @24 Stmnt

    '('  shift, and go to state 279


state 202

  137 expr: '(' expr . ')'
  138     | expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  159     | '(' expr . SEMI expr ':' expr ')'
  191 Expr: expr . AND Expr
  192     | expr . OR Expr

    SEMI    shift, and go to state 236
    OR      shift, and go to state 216
    AND     shift, and go to state 217
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    ')'     shift, and go to state 237


state 203

  186 Expr: '(' Expr . ')'
  187     | Expr . AND Expr
  188     | Expr . AND expr
  189     | Expr . OR Expr
  190     | Expr . OR expr

    OR   shift, and go to state 218
    AND  shift, and go to state 219
    ')'  shift, and go to state 280


state 204

  123 Stmnt: '{' @22 . sequence OS '}'

    ASSERT       shift, and go to state 105
    PRINT        shift, and go to state 106
    PRINTM       shift, and go to state 107
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    GOTO         shift, and go to state 108
    BREAK        shift, and go to state 109
    ELSE         shift, and go to state 110
    IF           shift, and go to state 111
    DO           shift, and go to state 112
    ATOMIC       shift, and go to state 113
    D_STEP       shift, and go to state 114
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    HIDDEN       shift, and go to state 10
    SHOW         shift, and go to state 11
    ISLOCAL      shift, and go to state 12
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    XU           shift, and go to state 119
    NAME         shift, and go to state 120
    PNAME        shift, and go to state 93
    INAME        shift, and go to state 121
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122
    '{'          shift, and go to state 123

    $default  reduce using rule 55 (vis)

    ccode      go to state 124
    cexpr      go to state 98
    sequence   go to state 281
    step       go to state 126
    vis        go to state 29
    one_decl   go to state 127
    varref     go to state 128
    pfld       go to state 100
    cmpnd      go to state 101
    stmnt      go to state 129
    Special    go to state 130
    Stmnt      go to state 131
    expr       go to state 132
    full_expr  go to state 133
    Expr       go to state 134
    Probe      go to state 135


state 205

  132 OS: SEMI .
  133 MS: SEMI .

    FI        reduce using rule 132 (OS)
    OD        reduce using rule 132 (OS)
    SEP       reduce using rule 132 (OS)
    '}'       reduce using rule 132 (OS)
    $default  reduce using rule 133 (MS)


state 206

   46 body: '{' @8 sequence OS . @9 '}'

    $default  reduce using rule 45 (@9)

    @9  go to state 282


state 207

   48 sequence: sequence MS . step
  134 MS: MS . SEMI

    ASSERT       shift, and go to state 105
    PRINT        shift, and go to state 106
    PRINTM       shift, and go to state 107
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    GOTO         shift, and go to state 108
    BREAK        shift, and go to state 109
    ELSE         shift, and go to state 110
    SEMI         shift, and go to state 283
    IF           shift, and go to state 111
    DO           shift, and go to state 112
    ATOMIC       shift, and go to state 113
    D_STEP       shift, and go to state 114
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    HIDDEN       shift, and go to state 10
    SHOW         shift, and go to state 11
    ISLOCAL      shift, and go to state 12
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    XU           shift, and go to state 119
    NAME         shift, and go to state 120
    PNAME        shift, and go to state 93
    INAME        shift, and go to state 121
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122
    '{'          shift, and go to state 123

    $default  reduce using rule 55 (vis)

    ccode      go to state 124
    cexpr      go to state 98
    step       go to state 284
    vis        go to state 29
    one_decl   go to state 127
    varref     go to state 128
    pfld       go to state 100
    cmpnd      go to state 101
    stmnt      go to state 129
    Special    go to state 130
    Stmnt      go to state 131
    expr       go to state 132
    full_expr  go to state 133
    Expr       go to state 134
    Probe      go to state 135


state 208

   99 Stmnt: varref ASGN . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 285


state 209

  109 Stmnt: varref R_RCV . @16 rargs
  113      | varref R_RCV . @18 LT rargs GT
  167 expr: varref R_RCV . @28 '[' rargs ']'

    LT        reduce using rule 112 (@18)
    '['       reduce using rule 166 (@28)
    $default  reduce using rule 108 (@16)

    @16  go to state 286
    @18  go to state 287
    @28  go to state 238


state 210

   90 Special: varref RCV . @12 rargs
  111 Stmnt: varref RCV . @17 LT rargs GT
  165 expr: varref RCV . @27 '[' rargs ']'

    LT        reduce using rule 110 (@17)
    '['       reduce using rule 164 (@27)
    $default  reduce using rule 89 (@12)

    @12  go to state 288
    @17  go to state 289
    @27  go to state 239


state 211

  115 Stmnt: varref O_SND . @19 margs

    $default  reduce using rule 114 (@19)

    @19  go to state 290


state 212

   92 Special: varref SND . @13 margs

    $default  reduce using rule 91 (@13)

    @13  go to state 291


state 213

  101 Stmnt: varref DECR .

    $default  reduce using rule 101 (Stmnt)


state 214

  100 Stmnt: varref INCR .

    $default  reduce using rule 100 (Stmnt)


state 215

   54 step: stmnt UNLESS . stmnt

    ASSERT       shift, and go to state 105
    PRINT        shift, and go to state 106
    PRINTM       shift, and go to state 107
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    GOTO         shift, and go to state 108
    BREAK        shift, and go to state 109
    ELSE         shift, and go to state 110
    IF           shift, and go to state 111
    DO           shift, and go to state 112
    ATOMIC       shift, and go to state 113
    D_STEP       shift, and go to state 114
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    NAME         shift, and go to state 276
    PNAME        shift, and go to state 93
    INAME        shift, and go to state 121
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122
    '{'          shift, and go to state 123

    ccode      go to state 124
    cexpr      go to state 98
    varref     go to state 128
    pfld       go to state 100
    cmpnd      go to state 101
    stmnt      go to state 292
    Special    go to state 130
    Stmnt      go to state 131
    expr       go to state 132
    full_expr  go to state 133
    Expr       go to state 134
    Probe      go to state 135


state 216

  153 expr: expr OR . expr
  192 Expr: expr OR . Expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 293
    Expr    go to state 294
    Probe   go to state 135


state 217

  152 expr: expr AND . expr
  191 Expr: expr AND . Expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 295
    Expr    go to state 296
    Probe   go to state 135


state 218

  189 Expr: Expr OR . Expr
  190     | Expr OR . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 297
    Expr    go to state 298
    Probe   go to state 135


state 219

  187 Expr: Expr AND . Expr
  188     | Expr AND . expr

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 299
    Expr    go to state 300
    Probe   go to state 135


state 220

   67 decl: decl_lst .

    $default  reduce using rule 67 (decl)


state 221

   16 proc: inst proctype NAME @1 '(' decl . ')' @2 Opt_priority Opt_enabler body

    ')'  shift, and go to state 301


state 222

   78 vardcl: NAME '[' CONST ']' .

    $default  reduce using rule 78 (vardcl)


state 223

  219 nlst: nlst NAME .

    $default  reduce using rule 219 (nlst)


state 224

   63 one_decl: vis TYPE asgn '{' nlst '}' .

    $default  reduce using rule 63 (one_decl)


state 225

  220 nlst: nlst ',' .

    $default  reduce using rule 220 (nlst)


state 226

   75 ch_init: '[' CONST . ']' OF '{' typ_list '}'

    ']'  shift, and go to state 302


state 227

   65 decl_lst: one_decl SEMI decl_lst .

    $default  reduce using rule 65 (decl_lst)


state 228

  161 expr: RUN aname @26 . '(' args ')' Opt_priority

    '('  shift, and go to state 303


state 229

  162 expr: LEN '(' varref . ')'

    ')'  shift, and go to state 304


state 230

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  163     | ENABLED '(' expr . ')'

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    ')'     shift, and go to state 305


state 231

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  173     | PC_VAL '(' expr . ')'

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    ')'     shift, and go to state 306


state 232

   82 pfld: NAME @10 '[' . expr ']'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 307


state 233

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  174     | PNAME '[' expr . ']' '@' NAME
  175     | PNAME '[' expr . ']' ':' pfld

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    ']'     shift, and go to state 308


state 234

  177 expr: PNAME ':' pfld .

    $default  reduce using rule 177 (expr)


state 235

  176 expr: PNAME '@' NAME .

    $default  reduce using rule 176 (expr)


state 236

  159 expr: '(' expr SEMI . expr ':' expr ')'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 309


state 237

  137 expr: '(' expr ')' .

    $default  reduce using rule 137 (expr)


state 238

  167 expr: varref R_RCV @28 . '[' rargs ']'

    '['  shift, and go to state 310


state 239

  165 expr: varref RCV @27 . '[' rargs ']'

    '['  shift, and go to state 311


state 240

   86 sfld: '.' . cmpnd

    NAME  shift, and go to state 92

    pfld   go to state 100
    cmpnd  go to state 312


state 241

   84 cmpnd: pfld @11 sfld .

    $default  reduce using rule 84 (cmpnd)


state 242

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  153     | expr OR expr .
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 153 (expr)


state 243

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  152     | expr AND expr .
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 152 (expr)


state 244

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  145     | expr '|' expr .
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 145 (expr)


state 245

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  144     | expr '^' expr .
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 144 (expr)


state 246

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  143     | expr '&' expr .
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 143 (expr)


state 247

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  151     | expr NE expr .
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 151 (expr)


state 248

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  150     | expr EQ expr .
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 150 (expr)


state 249

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  149     | expr LE expr .
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 149 (expr)


state 250

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  148     | expr GE expr .
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 148 (expr)


state 251

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  147     | expr LT expr .
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 147 (expr)


state 252

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  146     | expr GT expr .
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 146 (expr)


state 253

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  155     | expr RSHIFT expr .

    '+'  shift, and go to state 177
    '-'  shift, and go to state 178
    '*'  shift, and go to state 179
    '/'  shift, and go to state 180
    '%'  shift, and go to state 181

    $default  reduce using rule 155 (expr)


state 254

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  154     | expr LSHIFT expr .
  155     | expr . RSHIFT expr

    '+'  shift, and go to state 177
    '-'  shift, and go to state 178
    '*'  shift, and go to state 179
    '/'  shift, and go to state 180
    '%'  shift, and go to state 181

    $default  reduce using rule 154 (expr)


state 255

  138 expr: expr . '+' expr
  138     | expr '+' expr .
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    '*'  shift, and go to state 179
    '/'  shift, and go to state 180
    '%'  shift, and go to state 181

    $default  reduce using rule 138 (expr)


state 256

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  139     | expr '-' expr .
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    '*'  shift, and go to state 179
    '/'  shift, and go to state 180
    '%'  shift, and go to state 181

    $default  reduce using rule 139 (expr)


state 257

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  140     | expr '*' expr .
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    $default  reduce using rule 140 (expr)


state 258

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  141     | expr '/' expr .
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    $default  reduce using rule 141 (expr)


state 259

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  142     | expr '%' expr .
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    $default  reduce using rule 142 (expr)


state 260

  209 arg: expr ',' arg .

    $default  reduce using rule 209 (arg)


state 261

  103 Stmnt: PRINT '(' STRING . @15 prargs ')'

    $default  reduce using rule 102 (@15)

    @15  go to state 313


state 262

  105 Stmnt: PRINTM '(' CONST . ')'

    ')'  shift, and go to state 314


state 263

  104 Stmnt: PRINTM '(' varref . ')'

    ')'  shift, and go to state 315


state 264

  130 option: SEP @25 . sequence OS

    ASSERT       shift, and go to state 105
    PRINT        shift, and go to state 106
    PRINTM       shift, and go to state 107
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    GOTO         shift, and go to state 108
    BREAK        shift, and go to state 109
    ELSE         shift, and go to state 110
    IF           shift, and go to state 111
    DO           shift, and go to state 112
    ATOMIC       shift, and go to state 113
    D_STEP       shift, and go to state 114
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    HIDDEN       shift, and go to state 10
    SHOW         shift, and go to state 11
    ISLOCAL      shift, and go to state 12
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    XU           shift, and go to state 119
    NAME         shift, and go to state 120
    PNAME        shift, and go to state 93
    INAME        shift, and go to state 121
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122
    '{'          shift, and go to state 123

    $default  reduce using rule 55 (vis)

    ccode      go to state 124
    cexpr      go to state 98
    sequence   go to state 316
    step       go to state 126
    vis        go to state 29
    one_decl   go to state 127
    varref     go to state 128
    pfld       go to state 100
    cmpnd      go to state 101
    stmnt      go to state 129
    Special    go to state 130
    Stmnt      go to state 131
    expr       go to state 132
    full_expr  go to state 133
    Expr       go to state 134
    Probe      go to state 135


state 265

   93 Special: IF options FI .

    $default  reduce using rule 93 (Special)


state 266

  128 options: option options .

    $default  reduce using rule 128 (options)


state 267

   95 Special: DO @14 options . OD

    OD  shift, and go to state 317


state 268

  119 Stmnt: ATOMIC '{' @20 . sequence OS '}'

    ASSERT       shift, and go to state 105
    PRINT        shift, and go to state 106
    PRINTM       shift, and go to state 107
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    GOTO         shift, and go to state 108
    BREAK        shift, and go to state 109
    ELSE         shift, and go to state 110
    IF           shift, and go to state 111
    DO           shift, and go to state 112
    ATOMIC       shift, and go to state 113
    D_STEP       shift, and go to state 114
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    HIDDEN       shift, and go to state 10
    SHOW         shift, and go to state 11
    ISLOCAL      shift, and go to state 12
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    XU           shift, and go to state 119
    NAME         shift, and go to state 120
    PNAME        shift, and go to state 93
    INAME        shift, and go to state 121
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122
    '{'          shift, and go to state 123

    $default  reduce using rule 55 (vis)

    ccode      go to state 124
    cexpr      go to state 98
    sequence   go to state 318
    step       go to state 126
    vis        go to state 29
    one_decl   go to state 127
    varref     go to state 128
    pfld       go to state 100
    cmpnd      go to state 101
    stmnt      go to state 129
    Special    go to state 130
    Stmnt      go to state 131
    expr       go to state 132
    full_expr  go to state 133
    Expr       go to state 134
    Probe      go to state 135


state 269

  121 Stmnt: D_STEP '{' @21 . sequence OS '}'

    ASSERT       shift, and go to state 105
    PRINT        shift, and go to state 106
    PRINTM       shift, and go to state 107
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    GOTO         shift, and go to state 108
    BREAK        shift, and go to state 109
    ELSE         shift, and go to state 110
    IF           shift, and go to state 111
    DO           shift, and go to state 112
    ATOMIC       shift, and go to state 113
    D_STEP       shift, and go to state 114
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    HIDDEN       shift, and go to state 10
    SHOW         shift, and go to state 11
    ISLOCAL      shift, and go to state 12
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    XU           shift, and go to state 119
    NAME         shift, and go to state 120
    PNAME        shift, and go to state 93
    INAME        shift, and go to state 121
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122
    '{'          shift, and go to state 123

    $default  reduce using rule 55 (vis)

    ccode      go to state 124
    cexpr      go to state 98
    sequence   go to state 319
    step       go to state 126
    vis        go to state 29
    one_decl   go to state 127
    varref     go to state 128
    pfld       go to state 100
    cmpnd      go to state 101
    stmnt      go to state 129
    Special    go to state 130
    Stmnt      go to state 131
    expr       go to state 132
    full_expr  go to state 133
    Expr       go to state 134
    Probe      go to state 135


state 270

  193 Probe: FULL '(' varref . ')'

    ')'  shift, and go to state 320


state 271

  195 Probe: EMPTY '(' varref . ')'

    ')'  shift, and go to state 321


state 272

  194 Probe: NFULL '(' varref . ')'

    ')'  shift, and go to state 322


state 273

  196 Probe: NEMPTY '(' varref . ')'

    ')'  shift, and go to state 323


state 274

   69 vref_lst: varref ',' . vref_lst

    NAME  shift, and go to state 92

    vref_lst  go to state 324
    varref    go to state 199
    pfld      go to state 100
    cmpnd     go to state 101


state 275

   52 step: NAME ':' XU .

    $default  reduce using rule 52 (step)


state 276

   80 pfld: NAME .
   82     | NAME . @10 '[' expr ']'
   98 Special: NAME . ':' stmnt

    ':'  shift, and go to state 325

    '['       reduce using rule 81 (@10)
    $default  reduce using rule 80 (pfld)

    @10  go to state 153


state 277

   51 step: NAME ':' one_decl .

    $default  reduce using rule 51 (step)


state 278

   98 Special: NAME ':' stmnt .

    $default  reduce using rule 98 (Special)


state 279

  126 Stmnt: INAME @23 '(' . args ')' @24 Stmnt

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    $default  reduce using rule 202 (args)

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 102
    args    go to state 326
    arg     go to state 104


state 280

  186 Expr: '(' Expr ')' .

    $default  reduce using rule 186 (Expr)


state 281

   48 sequence: sequence . MS step
  123 Stmnt: '{' @22 sequence . OS '}'

    SEMI  shift, and go to state 205

    $default  reduce using rule 131 (OS)

    OS  go to state 327
    MS  go to state 207


state 282

   46 body: '{' @8 sequence OS @9 . '}'

    '}'  shift, and go to state 328


state 283

  134 MS: MS SEMI .

    $default  reduce using rule 134 (MS)


state 284

   48 sequence: sequence MS step .

    $default  reduce using rule 48 (sequence)


state 285

   99 Stmnt: varref ASGN expr .
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 99 (Stmnt)


state 286

  109 Stmnt: varref R_RCV @16 . rargs

    EVAL   shift, and go to state 329
    CONST  shift, and go to state 330
    NAME   shift, and go to state 92
    '-'    shift, and go to state 331
    '('    shift, and go to state 332

    varref  go to state 333
    pfld    go to state 100
    cmpnd   go to state 101
    rarg    go to state 334
    rargs   go to state 335


state 287

  113 Stmnt: varref R_RCV @18 . LT rargs GT

    LT  shift, and go to state 336


state 288

   90 Special: varref RCV @12 . rargs

    EVAL   shift, and go to state 329
    CONST  shift, and go to state 330
    NAME   shift, and go to state 92
    '-'    shift, and go to state 331
    '('    shift, and go to state 332

    varref  go to state 333
    pfld    go to state 100
    cmpnd   go to state 101
    rarg    go to state 334
    rargs   go to state 337


state 289

  111 Stmnt: varref RCV @17 . LT rargs GT

    LT  shift, and go to state 338


state 290

  115 Stmnt: varref O_SND @19 . margs

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 339
    margs   go to state 340
    arg     go to state 341


state 291

   92 Special: varref SND @13 . margs

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 339
    margs   go to state 342
    arg     go to state 341


state 292

   54 step: stmnt UNLESS stmnt .

    $default  reduce using rule 54 (step)


state 293

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  153     | expr OR expr .
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  191 Expr: expr . AND Expr
  192     | expr . OR Expr

    AND     shift, and go to state 217
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 153 (expr)


state 294

  187 Expr: Expr . AND Expr
  188     | Expr . AND expr
  189     | Expr . OR Expr
  190     | Expr . OR expr
  192     | expr OR Expr .

    AND  shift, and go to state 219

    $default  reduce using rule 192 (Expr)


state 295

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  152     | expr AND expr .
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  191 Expr: expr . AND Expr
  192     | expr . OR Expr

    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 152 (expr)


state 296

  187 Expr: Expr . AND Expr
  188     | Expr . AND expr
  189     | Expr . OR Expr
  190     | Expr . OR expr
  191     | expr AND Expr .

    $default  reduce using rule 191 (Expr)


state 297

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  190 Expr: Expr OR expr .
  191     | expr . AND Expr
  192     | expr . OR Expr

    AND     shift, and go to state 217
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 190 (Expr)


state 298

  187 Expr: Expr . AND Expr
  188     | Expr . AND expr
  189     | Expr . OR Expr
  189     | Expr OR Expr .
  190     | Expr . OR expr

    AND  shift, and go to state 219

    $default  reduce using rule 189 (Expr)


state 299

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  188 Expr: Expr AND expr .
  191     | expr . AND Expr
  192     | expr . OR Expr

    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181

    $default  reduce using rule 188 (Expr)


state 300

  187 Expr: Expr . AND Expr
  187     | Expr AND Expr .
  188     | Expr . AND expr
  189     | Expr . OR Expr
  190     | Expr . OR expr

    $default  reduce using rule 187 (Expr)


state 301

   16 proc: inst proctype NAME @1 '(' decl ')' . @2 Opt_priority Opt_enabler body

    $default  reduce using rule 15 (@2)

    @2  go to state 343


state 302

   75 ch_init: '[' CONST ']' . OF '{' typ_list '}'

    OF  shift, and go to state 344


state 303

  161 expr: RUN aname @26 '(' . args ')' Opt_priority

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    $default  reduce using rule 202 (args)

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 102
    args    go to state 345
    arg     go to state 104


state 304

  162 expr: LEN '(' varref ')' .

    $default  reduce using rule 162 (expr)


state 305

  163 expr: ENABLED '(' expr ')' .

    $default  reduce using rule 163 (expr)


state 306

  173 expr: PC_VAL '(' expr ')' .

    $default  reduce using rule 173 (expr)


state 307

   82 pfld: NAME @10 '[' expr . ']'
  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    ']'     shift, and go to state 346


state 308

  174 expr: PNAME '[' expr ']' . '@' NAME
  175     | PNAME '[' expr ']' . ':' pfld

    ':'  shift, and go to state 347
    '@'  shift, and go to state 348


state 309

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  159     | '(' expr SEMI expr . ':' expr ')'

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    ':'     shift, and go to state 349


state 310

  167 expr: varref R_RCV @28 '[' . rargs ']'

    EVAL   shift, and go to state 329
    CONST  shift, and go to state 330
    NAME   shift, and go to state 92
    '-'    shift, and go to state 331
    '('    shift, and go to state 332

    varref  go to state 333
    pfld    go to state 100
    cmpnd   go to state 101
    rarg    go to state 334
    rargs   go to state 350


state 311

  165 expr: varref RCV @27 '[' . rargs ']'

    EVAL   shift, and go to state 329
    CONST  shift, and go to state 330
    NAME   shift, and go to state 92
    '-'    shift, and go to state 331
    '('    shift, and go to state 332

    varref  go to state 333
    pfld    go to state 100
    cmpnd   go to state 101
    rarg    go to state 334
    rargs   go to state 351


state 312

   86 sfld: '.' cmpnd .

    $default  reduce using rule 86 (sfld)


state 313

  103 Stmnt: PRINT '(' STRING @15 . prargs ')'

    ','  shift, and go to state 352

    $default  reduce using rule 204 (prargs)

    prargs  go to state 353


state 314

  105 Stmnt: PRINTM '(' CONST ')' .

    $default  reduce using rule 105 (Stmnt)


state 315

  104 Stmnt: PRINTM '(' varref ')' .

    $default  reduce using rule 104 (Stmnt)


state 316

   48 sequence: sequence . MS step
  130 option: SEP @25 sequence . OS

    SEMI  shift, and go to state 205

    $default  reduce using rule 131 (OS)

    OS  go to state 354
    MS  go to state 207


state 317

   95 Special: DO @14 options OD .

    $default  reduce using rule 95 (Special)


state 318

   48 sequence: sequence . MS step
  119 Stmnt: ATOMIC '{' @20 sequence . OS '}'

    SEMI  shift, and go to state 205

    $default  reduce using rule 131 (OS)

    OS  go to state 355
    MS  go to state 207


state 319

   48 sequence: sequence . MS step
  121 Stmnt: D_STEP '{' @21 sequence . OS '}'

    SEMI  shift, and go to state 205

    $default  reduce using rule 131 (OS)

    OS  go to state 356
    MS  go to state 207


state 320

  193 Probe: FULL '(' varref ')' .

    $default  reduce using rule 193 (Probe)


state 321

  195 Probe: EMPTY '(' varref ')' .

    $default  reduce using rule 195 (Probe)


state 322

  194 Probe: NFULL '(' varref ')' .

    $default  reduce using rule 194 (Probe)


state 323

  196 Probe: NEMPTY '(' varref ')' .

    $default  reduce using rule 196 (Probe)


state 324

   69 vref_lst: varref ',' vref_lst .

    $default  reduce using rule 69 (vref_lst)


state 325

   98 Special: NAME ':' . stmnt

    ASSERT       shift, and go to state 105
    PRINT        shift, and go to state 106
    PRINTM       shift, and go to state 107
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    GOTO         shift, and go to state 108
    BREAK        shift, and go to state 109
    ELSE         shift, and go to state 110
    IF           shift, and go to state 111
    DO           shift, and go to state 112
    ATOMIC       shift, and go to state 113
    D_STEP       shift, and go to state 114
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    NAME         shift, and go to state 276
    PNAME        shift, and go to state 93
    INAME        shift, and go to state 121
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122
    '{'          shift, and go to state 123

    ccode      go to state 124
    cexpr      go to state 98
    varref     go to state 128
    pfld       go to state 100
    cmpnd      go to state 101
    stmnt      go to state 278
    Special    go to state 130
    Stmnt      go to state 131
    expr       go to state 132
    full_expr  go to state 133
    Expr       go to state 134
    Probe      go to state 135


state 326

  126 Stmnt: INAME @23 '(' args . ')' @24 Stmnt

    ')'  shift, and go to state 357


state 327

  123 Stmnt: '{' @22 sequence OS . '}'

    '}'  shift, and go to state 358


state 328

   46 body: '{' @8 sequence OS @9 '}' .

    $default  reduce using rule 46 (body)


state 329

  211 rarg: EVAL . '(' expr ')'

    '('  shift, and go to state 359


state 330

  212 rarg: CONST .

    $default  reduce using rule 212 (rarg)


state 331

  213 rarg: '-' . CONST

    CONST  shift, and go to state 360


state 332

  217 rargs: '(' . rargs ')'

    EVAL   shift, and go to state 329
    CONST  shift, and go to state 330
    NAME   shift, and go to state 92
    '-'    shift, and go to state 331
    '('    shift, and go to state 332

    varref  go to state 333
    pfld    go to state 100
    cmpnd   go to state 101
    rarg    go to state 334
    rargs   go to state 361


state 333

  210 rarg: varref .

    $default  reduce using rule 210 (rarg)


state 334

  214 rargs: rarg .
  215      | rarg . ',' rargs
  216      | rarg . '(' rargs ')'

    '('  shift, and go to state 362
    ','  shift, and go to state 363

    $default  reduce using rule 214 (rargs)


state 335

  109 Stmnt: varref R_RCV @16 rargs .

    $default  reduce using rule 109 (Stmnt)


state 336

  113 Stmnt: varref R_RCV @18 LT . rargs GT

    EVAL   shift, and go to state 329
    CONST  shift, and go to state 330
    NAME   shift, and go to state 92
    '-'    shift, and go to state 331
    '('    shift, and go to state 332

    varref  go to state 333
    pfld    go to state 100
    cmpnd   go to state 101
    rarg    go to state 334
    rargs   go to state 364


state 337

   90 Special: varref RCV @12 rargs .

    $default  reduce using rule 90 (Special)


state 338

  111 Stmnt: varref RCV @17 LT . rargs GT

    EVAL   shift, and go to state 329
    CONST  shift, and go to state 330
    NAME   shift, and go to state 92
    '-'    shift, and go to state 331
    '('    shift, and go to state 332

    varref  go to state 333
    pfld    go to state 100
    cmpnd   go to state 101
    rarg    go to state 334
    rargs   go to state 365


state 339

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  207 margs: expr . '(' arg ')'
  208 arg: expr .
  209    | expr . ',' arg

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    '('     shift, and go to state 366
    ','     shift, and go to state 182

    $default  reduce using rule 208 (arg)


state 340

  115 Stmnt: varref O_SND @19 margs .

    $default  reduce using rule 115 (Stmnt)


state 341

  206 margs: arg .

    $default  reduce using rule 206 (margs)


state 342

   92 Special: varref SND @13 margs .

    $default  reduce using rule 92 (Special)


state 343

   16 proc: inst proctype NAME @1 '(' decl ')' @2 . Opt_priority Opt_enabler body

    PRIORITY  shift, and go to state 57

    $default  reduce using rule 178 (Opt_priority)

    Opt_priority  go to state 367


state 344

   75 ch_init: '[' CONST ']' OF . '{' typ_list '}'

    '{'  shift, and go to state 368


state 345

  161 expr: RUN aname @26 '(' args . ')' Opt_priority

    ')'  shift, and go to state 369


state 346

   82 pfld: NAME @10 '[' expr ']' .

    $default  reduce using rule 82 (pfld)


state 347

  175 expr: PNAME '[' expr ']' ':' . pfld

    NAME  shift, and go to state 92

    pfld  go to state 370


state 348

  174 expr: PNAME '[' expr ']' '@' . NAME

    NAME  shift, and go to state 371


state 349

  159 expr: '(' expr SEMI expr ':' . expr ')'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 372


state 350

  167 expr: varref R_RCV @28 '[' rargs . ']'

    ']'  shift, and go to state 373


state 351

  165 expr: varref RCV @27 '[' rargs . ']'

    ']'  shift, and go to state 374


state 352

  205 prargs: ',' . arg

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 102
    arg     go to state 375


state 353

  103 Stmnt: PRINT '(' STRING @15 prargs . ')'

    ')'  shift, and go to state 376


state 354

  130 option: SEP @25 sequence OS .

    $default  reduce using rule 130 (option)


state 355

  119 Stmnt: ATOMIC '{' @20 sequence OS . '}'

    '}'  shift, and go to state 377


state 356

  121 Stmnt: D_STEP '{' @21 sequence OS . '}'

    '}'  shift, and go to state 378


state 357

  126 Stmnt: INAME @23 '(' args ')' . @24 Stmnt

    $default  reduce using rule 125 (@24)

    @24  go to state 379


state 358

  123 Stmnt: '{' @22 sequence OS '}' .

    $default  reduce using rule 123 (Stmnt)


state 359

  211 rarg: EVAL '(' . expr ')'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 380


state 360

  213 rarg: '-' CONST .

    $default  reduce using rule 213 (rarg)


state 361

  217 rargs: '(' rargs . ')'

    ')'  shift, and go to state 381


state 362

  216 rargs: rarg '(' . rargs ')'

    EVAL   shift, and go to state 329
    CONST  shift, and go to state 330
    NAME   shift, and go to state 92
    '-'    shift, and go to state 331
    '('    shift, and go to state 332

    varref  go to state 333
    pfld    go to state 100
    cmpnd   go to state 101
    rarg    go to state 334
    rargs   go to state 382


state 363

  215 rargs: rarg ',' . rargs

    EVAL   shift, and go to state 329
    CONST  shift, and go to state 330
    NAME   shift, and go to state 92
    '-'    shift, and go to state 331
    '('    shift, and go to state 332

    varref  go to state 333
    pfld    go to state 100
    cmpnd   go to state 101
    rarg    go to state 334
    rargs   go to state 383


state 364

  113 Stmnt: varref R_RCV @18 LT rargs . GT

    GT  shift, and go to state 384


state 365

  111 Stmnt: varref RCV @17 LT rargs . GT

    GT  shift, and go to state 385


state 366

  207 margs: expr '(' . arg ')'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 97

    cexpr   go to state 98
    varref  go to state 99
    pfld    go to state 100
    cmpnd   go to state 101
    expr    go to state 102
    arg     go to state 386


state 367

   16 proc: inst proctype NAME @1 '(' decl ')' @2 Opt_priority . Opt_enabler body

    PROVIDED  shift, and go to state 387

    $default  reduce using rule 182 (Opt_enabler)

    Opt_enabler  go to state 388


state 368

   75 ch_init: '[' CONST ']' OF '{' . typ_list '}'

    error  shift, and go to state 389
    TYPE   shift, and go to state 390
    UNAME  shift, and go to state 391

    basetype  go to state 392
    typ_list  go to state 393


state 369

  161 expr: RUN aname @26 '(' args ')' . Opt_priority

    PRIORITY  shift, and go to state 57

    $default  reduce using rule 178 (Opt_priority)

    Opt_priority  go to state 394


state 370

  175 expr: PNAME '[' expr ']' ':' pfld .

    $default  reduce using rule 175 (expr)


state 371

  174 expr: PNAME '[' expr ']' '@' NAME .

    $default  reduce using rule 174 (expr)


state 372

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  159     | '(' expr SEMI expr ':' expr . ')'

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    ')'     shift, and go to state 395


state 373

  167 expr: varref R_RCV @28 '[' rargs ']' .

    $default  reduce using rule 167 (expr)


state 374

  165 expr: varref RCV @27 '[' rargs ']' .

    $default  reduce using rule 165 (expr)


state 375

  205 prargs: ',' arg .

    $default  reduce using rule 205 (prargs)


state 376

  103 Stmnt: PRINT '(' STRING @15 prargs ')' .

    $default  reduce using rule 103 (Stmnt)


state 377

  119 Stmnt: ATOMIC '{' @20 sequence OS '}' .

    $default  reduce using rule 119 (Stmnt)


state 378

  121 Stmnt: D_STEP '{' @21 sequence OS '}' .

    $default  reduce using rule 121 (Stmnt)


state 379

  126 Stmnt: INAME @23 '(' args ')' @24 . Stmnt

    ASSERT       shift, and go to state 105
    PRINT        shift, and go to state 106
    PRINTM       shift, and go to state 107
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    ELSE         shift, and go to state 110
    ATOMIC       shift, and go to state 113
    D_STEP       shift, and go to state 114
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    INAME        shift, and go to state 121
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122
    '{'          shift, and go to state 123

    ccode      go to state 124
    cexpr      go to state 98
    varref     go to state 396
    pfld       go to state 100
    cmpnd      go to state 101
    Stmnt      go to state 397
    expr       go to state 132
    full_expr  go to state 133
    Expr       go to state 134
    Probe      go to state 135


state 380

  138 expr: expr . '+' expr
  139     | expr . '-' expr
  140     | expr . '*' expr
  141     | expr . '/' expr
  142     | expr . '%' expr
  143     | expr . '&' expr
  144     | expr . '^' expr
  145     | expr . '|' expr
  146     | expr . GT expr
  147     | expr . LT expr
  148     | expr . GE expr
  149     | expr . LE expr
  150     | expr . EQ expr
  151     | expr . NE expr
  152     | expr . AND expr
  153     | expr . OR expr
  154     | expr . LSHIFT expr
  155     | expr . RSHIFT expr
  211 rarg: EVAL '(' expr . ')'

    OR      shift, and go to state 164
    AND     shift, and go to state 165
    '|'     shift, and go to state 166
    '^'     shift, and go to state 167
    '&'     shift, and go to state 168
    NE      shift, and go to state 169
    EQ      shift, and go to state 170
    LE      shift, and go to state 171
    GE      shift, and go to state 172
    LT      shift, and go to state 173
    GT      shift, and go to state 174
    RSHIFT  shift, and go to state 175
    LSHIFT  shift, and go to state 176
    '+'     shift, and go to state 177
    '-'     shift, and go to state 178
    '*'     shift, and go to state 179
    '/'     shift, and go to state 180
    '%'     shift, and go to state 181
    ')'     shift, and go to state 398


state 381

  217 rargs: '(' rargs ')' .

    $default  reduce using rule 217 (rargs)


state 382

  216 rargs: rarg '(' rargs . ')'

    ')'  shift, and go to state 399


state 383

  215 rargs: rarg ',' rargs .

    $default  reduce using rule 215 (rargs)


state 384

  113 Stmnt: varref R_RCV @18 LT rargs GT .

    $default  reduce using rule 113 (Stmnt)


state 385

  111 Stmnt: varref RCV @17 LT rargs GT .

    $default  reduce using rule 111 (Stmnt)


state 386

  207 margs: expr '(' arg . ')'

    ')'  shift, and go to state 400


state 387

  183 Opt_enabler: PROVIDED . '(' full_expr ')'
  184            | PROVIDED . error

    error  shift, and go to state 401
    '('    shift, and go to state 402


state 388

   16 proc: inst proctype NAME @1 '(' decl ')' @2 Opt_priority Opt_enabler . body

    '{'  shift, and go to state 54

    body  go to state 403


state 389

  199 basetype: error .

    $default  reduce using rule 199 (basetype)


state 390

  197 basetype: TYPE .

    $default  reduce using rule 197 (basetype)


state 391

  198 basetype: UNAME .

    $default  reduce using rule 198 (basetype)


state 392

  200 typ_list: basetype .
  201         | basetype . ',' typ_list

    ','  shift, and go to state 404

    $default  reduce using rule 200 (typ_list)


state 393

   75 ch_init: '[' CONST ']' OF '{' typ_list . '}'

    '}'  shift, and go to state 405


state 394

  161 expr: RUN aname @26 '(' args ')' Opt_priority .

    $default  reduce using rule 161 (expr)


state 395

  159 expr: '(' expr SEMI expr ':' expr ')' .

    $default  reduce using rule 159 (expr)


state 396

   99 Stmnt: varref . ASGN expr
  100      | varref . INCR
  101      | varref . DECR
  109      | varref . R_RCV @16 rargs
  111      | varref . RCV @17 LT rargs GT
  113      | varref . R_RCV @18 LT rargs GT
  115      | varref . O_SND @19 margs
  165 expr: varref . RCV @27 '[' rargs ']'
  167     | varref . R_RCV @28 '[' rargs ']'
  168     | varref .

    ASGN   shift, and go to state 208
    R_RCV  shift, and go to state 209
    RCV    shift, and go to state 406
    O_SND  shift, and go to state 211
    DECR   shift, and go to state 213
    INCR   shift, and go to state 214

    $default  reduce using rule 168 (expr)


state 397

  126 Stmnt: INAME @23 '(' args ')' @24 Stmnt .

    $default  reduce using rule 126 (Stmnt)


state 398

  211 rarg: EVAL '(' expr ')' .

    $default  reduce using rule 211 (rarg)


state 399

  216 rargs: rarg '(' rargs ')' .

    $default  reduce using rule 216 (rargs)


state 400

  207 margs: expr '(' arg ')' .

    $default  reduce using rule 207 (margs)


state 401

  184 Opt_enabler: PROVIDED error .

    $default  reduce using rule 184 (Opt_enabler)


state 402

  183 Opt_enabler: PROVIDED '(' . full_expr ')'

    C_EXPR       shift, and go to state 84
    RUN          shift, and go to state 85
    LEN          shift, and go to state 86
    ENABLED      shift, and go to state 87
    PC_VAL       shift, and go to state 88
    TIMEOUT      shift, and go to state 89
    NONPROGRESS  shift, and go to state 90
    FULL         shift, and go to state 115
    EMPTY        shift, and go to state 116
    NFULL        shift, and go to state 117
    NEMPTY       shift, and go to state 118
    CONST        shift, and go to state 91
    NAME         shift, and go to state 92
    PNAME        shift, and go to state 93
    SND          shift, and go to state 94
    '-'          shift, and go to state 95
    '~'          shift, and go to state 96
    '('          shift, and go to state 122

    cexpr      go to state 98
    varref     go to state 99
    pfld       go to state 100
    cmpnd      go to state 101
    expr       go to state 132
    full_expr  go to state 407
    Expr       go to state 134
    Probe      go to state 135


state 403

   16 proc: inst proctype NAME @1 '(' decl ')' @2 Opt_priority Opt_enabler body .

    $default  reduce using rule 16 (proc)


state 404

  201 typ_list: basetype ',' . typ_list

    error  shift, and go to state 389
    TYPE   shift, and go to state 390
    UNAME  shift, and go to state 391

    basetype  go to state 392
    typ_list  go to state 408


state 405

   75 ch_init: '[' CONST ']' OF '{' typ_list '}' .

    $default  reduce using rule 75 (ch_init)


state 406

  111 Stmnt: varref RCV . @17 LT rargs GT
  165 expr: varref RCV . @27 '[' rargs ']'

    '['       reduce using rule 164 (@27)
    $default  reduce using rule 110 (@17)

    @17  go to state 289
    @27  go to state 239


state 407

  183 Opt_enabler: PROVIDED '(' full_expr . ')'

    ')'  shift, and go to state 409


state 408

  201 typ_list: basetype ',' typ_list .

    $default  reduce using rule 201 (typ_list)


state 409

  183 Opt_enabler: PROVIDED '(' full_expr ')' .

    $default  reduce using rule 183 (Opt_enabler)
